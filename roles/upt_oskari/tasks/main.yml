---
- name: Installing nginx
  apt:
    name: nginx
    state: latest

- name: Starting nginx
  service:
    name: nginx
    state: started
    enabled: true

- name: Installing postgres
  apt:
    name: postgresql
    state: latest

- name: Installing PostGIS
  apt:
    name: postgresql-10-postgis-2.4
    #state: latest  

- name: Starting postgres
  service:
    name: postgresql
    state: started
    enabled: true

- name: Postgresql allowing remote connections ipv4
  lineinfile:
    path: /etc/postgresql/10/main/pg_hba.conf 
    regexp: '^host(.*)(all)(.*)(all)(.*)(127.0.0.1/32)(.*)$'
    line: 'host\1\2\3\4\5 0.0.0.0/0 \7'
    backrefs: yes

- name: Postgresql allowing remote connections ipv6
  lineinfile:
    path: /etc/postgresql/10/main/pg_hba.conf 
    regexp: '^host(.*)(all)(.*)(all)(.*)(::1/128)(.*)$'
    line: 'host\1\2\3\4\5::0/0\7'
    backrefs: yes

- name: Postgresql listen on all IP
  lineinfile:
    path: /etc/postgresql/10/main/postgresql.conf
    regexp: ^\# (listen_addresses = \')(localhost)(\'.*)$
    line: '\1*\3'
    backrefs: yes

- name: Backup `oskari-ext.properties` Oskari settings file if backup file `oskari-ext.properties.orig` does not exist
  shell: "cp {{ install_dir_oskari }}/oskari-server/resources/oskari-ext.properties {{ install_dir_oskari }}/oskari-server/resources/oskari-ext.properties.orig"
  args:
    creates: "{{ install_dir_oskari }}/oskari-server/resources/oskari-ext.properties.orig"

- name: Copy `oskari-ext.properties` settings file for Oskari from template
  template:
    src: ../templates/oskari-ext.properties.j2
    dest: "{{ install_dir_oskari }}/oskari-server/resources/oskari-ext.properties"
    owner: root
    group: root
    mode: 0644

- name: Cloning UPT-GUI repository
  git: 
    #repo: https://{{ gituser | urlencode }}:{{ gitpassword | urlencode }}@github.com/miguel-capsus/UPT-UrbanPerformance.git
    repo: https://github.com/amilcar-capsus/UPT-GUI.git
    dest: "{{ oskari_dir }}/UPT-GUI"
    clone: yes

- name: Cloning UPT-Server-Extension repository
  git: 
    #repo: https://{{ gituser | urlencode }}:{{ gitpassword | urlencode }}@github.com/miguel-capsus/UPT-Distance-Module.git
    repo: https://github.com/amilcar-capsus/UPT-Server-Extension.git
    dest: "{{ oskari_dir }}/UPT-Server-Extension"
    clone: yes

- name: Run npm install for UPT-GUI dependencies
  shell: |
    cd {{ oskari_dir }}/UPT-GUI
    git checkout master
    sudo npm install
    exit

- name: Building the UPT-GUI for Oskari
  shell: |
    cd {{ oskari_dir }}/UPT-GUI
    sudo ng build --prod --output-hashing none
    exit

- name: Copy build artifacts to oskari-frontend
  shell: |
    cp -r {{ oskari_dir }}/UPT-GUI/dist/PLID {{ oskari_dir }}/sample-application/dist/1.2.1/geoportal/

- name: Run UPT-Server-Extension SQL scripts
  become_user: postgres
  become_method: sudo
  environment:
    PGPASSWORD: '{{ oskari_db_pw }}'
  shell: |
    psql -h localhost -U oskari -f /opt/oskari/oskari-server/UPT-Server-Extension/app-resources/src/main/resources/flyway/example/run-upt-scripts.sql -d oskaridb
- name: Build oskari-map.war file
  shell: |
    cd {{ oskari_dir }}/UPT-Server-Extension
    sudo mvn clean install
- name: Copy oskari-map.war to webapps of oskari-server directory
  shell: |
    sudo cp {{ oskari_dir }}/UPT-Server-Extension/webapp-map/target/oskari-map.war {{ oskari_dir }}/webapps